/*
 * Aryeo
 *
 * Contact: jarrod@aryeo.com
 */

/// PaginationMeta : Metadata about a paginated response.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct PaginationMeta {
    /// Total number of records.
    #[serde(rename = "total")]
    pub total: i32,
    /// Number of records per page.
    #[serde(rename = "per_page")]
    pub per_page: i32,
    /// The current page.
    #[serde(rename = "current_page")]
    pub current_page: i32,
    /// The last page of records.
    #[serde(rename = "last_page")]
    pub last_page: i32,
    /// The ID of the first record on this page. This is specified as either `integer` or `null` purely for spec testing purposes. The model which is autogenerated from this definition will be thrown out and written by-hand.
    #[serde(rename = "from", skip_serializing_if = "Option::is_none")]
    pub from: Option<i32>,
    /// The ID of the last record on this page. This is specified as either `integer` or `null` purely for spec testing purposes. The model which is autogenerated from this definition will be thrown out and written by-hand.
    #[serde(rename = "to", skip_serializing_if = "Option::is_none")]
    pub to: Option<i32>,
    /// The current paged path.
    #[serde(rename = "path")]
    pub path: String,
}

impl PaginationMeta {
    /// Metadata about a paginated response.
    pub fn new(total: i32, per_page: i32, current_page: i32, last_page: i32, path: String) -> PaginationMeta {
        PaginationMeta {
            total,
            per_page,
            current_page,
            last_page,
            from: None,
            to: None,
            path,
        }
    }
}


